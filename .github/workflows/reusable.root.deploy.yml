on:
  workflow_call:
    inputs:
      terraform-version:
        description: 'Terraform version to use e.g. 1.0.5'
        type: string
        required: true

      tag-version:
        description: 'Tag version to deploy e.g. v1.0.0'
        type: string
        required: true

      aws-region:
        description: 'AWS Region to deploy to e.g. eu-west-2'
        type: string
        required: true

      project:
        description: 'TF Project to deploy e.g. er'
        type: string
        required: true

      component:
        description: 'TF Component to deploy e.g. website'
        type: string
        required: true

      group:
        description: 'TF Group to deploy e.g. main'
        type: string
        required: true
      
      environment:
        description: 'TF Environment to deploy to e.g. dev, staging, prod'
        type: string
        required: true

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Restore Build Cache
      uses: actions/cache/restore@v4
      with:
        path: build
        key: ${{ runner.os }}-build-${{ github.sha }}
        fail-on-cache-miss: true

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ inputs.terraform-version }}
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::197239729734:role/github_oidc
        aws-region: eu-west-2

    - name: Show Directory Structure
      run: tree -ra

    - name: Set Package Version In Env
      working-directory: ./build/ethanr.co.uk-terraform
      run: |
        ENV_FILE=./etc/env_${{ inputs.aws-region }}_${{ inputs.environment }}.tfvars
        echo "package_version = \"${{ inputs.tag-version }}\"" >> $ENV_FILE

    - name: Plan
      env:
        REGION: ${{ inputs.aws-region }}
        PROJECT: ${{ inputs.project }}
        COMPONENT: ${{ inputs.component }}
        GROUP: ${{ inputs.group }}
        ENVIRONMENT: ${{ inputs.environment }}
      working-directory: ./build/ethanr.co.uk-terraform
      run: |
        ./bin/terraform.sh \
          -t -n -w \
          -r $REGION \
          -p $PROJECT \
          -g $GROUP \
          -c $COMPONENT \
          -e $ENVIRONMENT \
          -a plan
        
    - name: Apply
      env:
        REGION: ${{ inputs.aws-region }}
        PROJECT: ${{ inputs.project }}
        COMPONENT: ${{ inputs.component }}
        GROUP: ${{ inputs.group }}
        ENVIRONMENT: ${{ inputs.environment }}
      working-directory: ./build/ethanr.co.uk-terraform
      run: |
        ./bin/terraform.sh \
          -t -n -w \
          -r $REGION \
          -p $PROJECT \
          -g $GROUP \
          -c $COMPONENT \
          -e $ENVIRONMENT \
          -a apply
